{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\n * Created with @iobroker/create-adapter v2.1.1\n */\n\n// The adapter-core module gives you access to the core ioBroker functions\n// you need to create an adapter\nimport * as utils from \"@iobroker/adapter-core\";\nimport axios, { AxiosInstance } from \"axios\";\nimport crypto from \"crypto\";\nimport https from \"https\";\nimport Json2iob from \"./lib/json2iob\";\nimport L510E from \"./lib/utils/l510e\";\nimport L530 from \"./lib/utils/l530\";\nimport P100 from \"./lib/utils/p100\";\nimport P110 from \"./lib/utils/p110\";\n\nclass Tapo extends utils.Adapter {\n  private devices: { [key: string]: any };\n  private deviceObjects: { [key: string]: any };\n  private json2iob: Json2iob;\n  private secret: Buffer;\n  private requestClient: AxiosInstance;\n  updateInterval: any = null;\n  reLoginTimeout: any = null;\n  refreshTokenTimeout: any = null;\n  session: any = {};\n  refreshTimeout: any;\n  refreshTokenInterval: any;\n  public constructor(options: Partial<utils.AdapterOptions> = {}) {\n    super({\n      ...options,\n      name: \"tapo\",\n    });\n    this.on(\"ready\", this.onReady.bind(this));\n    this.on(\"stateChange\", this.onStateChange.bind(this));\n    this.on(\"unload\", this.onUnload.bind(this));\n    this.devices = {};\n    this.deviceObjects = {};\n    this.json2iob = new Json2iob(this);\n    this.requestClient = axios.create({\n      httpsAgent: new https.Agent({\n        rejectUnauthorized: false,\n      }),\n    });\n    this.secret = Buffer.from([\n      54, 101, 100, 55, 100, 57, 55, 102, 51, 101, 55, 51, 52, 54, 55, 102, 56, 97, 53, 98, 97, 98, 57, 48, 98, 53, 55,\n      55, 98, 97, 52, 99,\n    ]);\n  }\n\n  /**\n   * Is called when databases are connected and adapter received configuration.\n   */\n  private async onReady(): Promise<void> {\n    this.setState(\"info.connection\", false, true);\n    if (this.config.interval < 0.5) {\n      this.log.info(\"Set interval to minimum 0.5\");\n      this.config.interval = 0.5;\n    }\n    if (!this.config.username || !this.config.password) {\n      this.log.error(\"Please set username and password in the instance settings\");\n      return;\n    }\n\n    this.updateInterval = null;\n    this.reLoginTimeout = null;\n    this.refreshTokenTimeout = null;\n    this.session = {};\n    this.subscribeStates(\"*\");\n\n    this.log.info(\"Login tp TAPO App\");\n    await this.login();\n    if (this.session.token) {\n      await this.getDeviceList();\n      this.log.info(\"Wait for connections\");\n      await this.sleep(10000);\n      await this.updateDevices();\n      this.updateInterval = setInterval(async () => {\n        await this.updateDevices();\n      }, this.config.interval * 1000);\n    }\n  }\n  async login(): Promise<void> {\n    let body = JSON.stringify({\n      appVersion: \"2.8.21\",\n      refreshTokenNeeded: true,\n      platform: \"iOS 14.8\",\n      cloudPassword: this.config.password,\n      terminalUUID: \"CDE6601E-148C-4CB7-831F-FD587E999D99\",\n      cloudUserName: this.config.username,\n      terminalName: \"iPhone\",\n      terminalMeta: \"3\",\n      appType: \"TP-Link_Tapo_iOS\",\n    });\n    let path = \"api/v2/account/login\";\n    const mfaIdState = await this.getStateAsync(\"mfaId\");\n    if (mfaIdState && mfaIdState.val) {\n      if (!this.config.mfa) {\n        this.log.error(\"Please set mfa in the instance settings\");\n        return;\n      }\n\n      body = JSON.stringify({\n        cloudUserName: this.config.username,\n        MFAProcessId: mfaIdState.val,\n        appType: \"TP-Link_Tapo_iOS\",\n        MFAType: 2,\n        code: this.config.mfa,\n        terminalBindEnabled: true,\n      });\n      path = \"api/v2/account/checkMFACodeAndLogin\";\n      await this.setStateAsync(\"mfaId\", \"\", true);\n    }\n    const md5 = crypto.createHash(\"md5\").update(body).digest(\"base64\");\n    this.log.debug(md5);\n    const content = md5 + \"\\n9999999999\\nfee66616-58dd-4bcb-be79-fe092d800a21\\n/\" + path;\n    const signature = crypto.createHmac(\"sha1\", this.secret).update(content).digest(\"hex\");\n    await this.requestClient({\n      method: \"post\",\n      url:\n        \"https://n-wap-gw.tplinkcloud.com/\" +\n        path +\n        \"?termID=CDE6601E-148C-4CB7-831F-FD587E954C69&appVer=2.8.21&locale=de_DE&appName=TP-Link_Tapo_iOS&netType=wifi&model=iPhone10%2C5&termName=iPhone&termMeta=3&brand=TPLINK&ospf=iOS%2014.8\",\n      headers: {\n        \"Content-Type\": \"application/json;UTF-8\",\n        Accept: \"*/*\",\n        \"User-Agent\": \"Tapo/2.8.21 (iPhone; iOS 14.8; Scale/3.00)\",\n        \"Accept-Language\": \"de-DE;q=1, uk-DE;q=0.9, en-DE;q=0.8\",\n        \"X-Authorization\":\n          \"Timestamp=9999999999, Nonce=fee66616-58dd-4bcb-be79-fe092d800a21, AccessKey=4d11b6b9d5ea4d19a829adbb9714b057, Signature=\" +\n          signature,\n      },\n      data: body,\n    })\n      .then(async (res) => {\n        this.log.debug(JSON.stringify(res.data));\n        if (res.data.error_code) {\n          this.log.error(JSON.stringify(res.data));\n          return;\n        }\n        if (res.data.result?.MFAProcessId) {\n          this.log.info(\"Found MFA Process please enter MFA in the instance settings\");\n          await this.setObjectNotExistsAsync(\"mfaId\", {\n            type: \"state\",\n            common: {\n              name: \"MFA Id\",\n              write: false,\n              read: true,\n              type: \"string\",\n              role: \"text\",\n            },\n            native: {},\n          });\n          await this.setStateAsync(\"mfaId\", res.data.result?.MFAProcessId, true);\n\n          const body = JSON.stringify({\n            cloudPassword: this.config.password,\n            locale: \"de_DE\",\n            terminalUUID: \"CDE6601E-148C-4CB7-831F-FD587E999D99\",\n            cloudUserName: this.config.username,\n            appType: \"TP-Link_Tapo_iOS\",\n          });\n\n          const path = \"api/v2/account/getEmailVC4TerminalMFA\";\n\n          const md5 = crypto.createHash(\"md5\").update(body).digest(\"base64\");\n          this.log.debug(md5);\n          const content = md5 + \"\\n9999999999\\nfee66616-58dd-4bcb-be79-fe092d800a21\\n/\" + path;\n          const signature = crypto.createHmac(\"sha1\", this.secret).update(content).digest(\"hex\");\n          await this.requestClient({\n            method: \"post\",\n            url:\n              \"https://n-wap-gw.tplinkcloud.com/\" +\n              path +\n              \"?termID=CDE6601E-148C-4CB7-831F-FD587E954C69&appVer=2.8.21&locale=de_DE&appName=TP-Link_Tapo_iOS&netType=wifi&model=iPhone10%2C5&termName=iPhone&termMeta=3&brand=TPLINK&ospf=iOS%2014.8\",\n            headers: {\n              \"Content-Type\": \"application/json;UTF-8\",\n              Accept: \"*/*\",\n              \"User-Agent\": \"Tapo/2.8.21 (iPhone; iOS 14.8; Scale/3.00)\",\n              \"Accept-Language\": \"de-DE;q=1, uk-DE;q=0.9, en-DE;q=0.8\",\n              \"X-Authorization\":\n                \"Timestamp=9999999999, Nonce=fee66616-58dd-4bcb-be79-fe092d800a21, AccessKey=4d11b6b9d5ea4d19a829adbb9714b057, Signature=\" +\n                signature,\n            },\n            data: body,\n          })\n            .then(async (res) => {\n              this.log.debug(JSON.stringify(res.data));\n              if (res.data.error_code) {\n                this.log.error(JSON.stringify(res.data));\n                return;\n              }\n            })\n            .catch((error) => {\n              this.log.error(error);\n              error.response && this.log.error(JSON.stringify(error.response.data));\n            });\n          return;\n        }\n        this.setState(\"info.connection\", true, true);\n        this.session = res.data.result;\n        return;\n      })\n      .catch((error) => {\n        this.log.error(error);\n        error.response && this.log.error(JSON.stringify(error.response.data));\n      });\n  }\n\n  async getDeviceList(): Promise<void> {\n    const body =\n      '{\"index\":0,\"deviceTypeList\":[\"SMART.TAPOBULB\",\"SMART.TAPOPLUG\",\"SMART.IPCAMERA\",\"SMART.TAPOHUB\",\"SMART.TAPOSENSOR\",\"SMART.TAPOSWITCH\"],\"limit\":20}';\n    const md5 = crypto.createHash(\"md5\").update(body).digest(\"base64\");\n    this.log.debug(md5);\n    const content = md5 + \"\\n9999999999\\nfee66616-58dd-4bcb-be79-fe092d800a21\\n/api/v2/common/getDeviceListByPage\";\n    const signature = crypto.createHmac(\"sha1\", this.secret).update(content).digest(\"hex\");\n    await this.requestClient({\n      method: \"post\",\n      url: `https://n-euw1-wap-gw.tplinkcloud.com/api/v2/common/getDeviceListByPage?token=${this.session.token}&termID=CDE6601E-148C-4CB7-831F-FD587E954C69&appVer=2.8.21&locale=de_DE&appName=TP-Link_Tapo_iOS&netType=wifi&model=iPhone10%2C5&termName=iPhone&termMeta=3&brand=TPLINK&ospf=iOS%2014.8`,\n      headers: {\n        \"Content-Type\": \"application/json;UTF-8\",\n        \"Content-MD5\": md5,\n        Accept: \"*/*\",\n        \"User-Agent\": \"Tapo/2.8.21 (iPhone; iOS 14.8; Scale/3.00)\",\n        \"Accept-Language\": \"de-DE;q=1, uk-DE;q=0.9, en-DE;q=0.8\",\n        \"X-Authorization\":\n          \"Timestamp=9999999999, Nonce=fee66616-58dd-4bcb-be79-fe092d800a21, AccessKey=4d11b6b9d5ea4d19a829adbb9714b057, Signature=\" +\n          signature,\n      },\n      data: body,\n    })\n      .then(async (res) => {\n        this.log.debug(JSON.stringify(res.data));\n        if (res.data.error_code) {\n          this.log.error(JSON.stringify(res.data));\n          return;\n        }\n        this.log.info(`Found ${res.data.result?.totalNum} devices`);\n        for (const device of res.data.result?.deviceList) {\n          const id = device.deviceId;\n          this.devices[id] = device;\n          const name = Buffer.from(device.alias, \"base64\").toString(\"utf8\");\n\n          await this.setObjectNotExistsAsync(id, {\n            type: \"device\",\n            common: {\n              name: name,\n            },\n            native: {},\n          });\n          await this.setObjectNotExistsAsync(id + \".remote\", {\n            type: \"channel\",\n            common: {\n              name: \"Remote Controls\",\n            },\n            native: {},\n          });\n\n          const remoteArray = [\n            { command: \"refresh\", name: \"True = Refresh\" },\n            { command: \"setPowerState\", name: \"True = On, False = Off\" },\n            {\n              command: \"setBrightness\",\n              name: \"Set Brightness for Light devices\",\n              type: \"number\",\n              role: \"level.brightness\",\n              def: 5,\n            },\n            {\n              command: \"setColorTemp\",\n              name: \"Set Color Temp for Light devices\",\n              type: \"number\",\n              role: \"level.color.temperature\",\n              def: 3000,\n            },\n            {\n              command: \"setColor\",\n              name: \"Set Color for Light devices (hue, saturation)\",\n              def: \"30, 100\",\n              type: \"string\",\n            },\n          ];\n          remoteArray.forEach((remote) => {\n            this.setObjectNotExists(id + \".remote.\" + remote.command, {\n              type: \"state\",\n              common: {\n                name: remote.name || \"\",\n                type: remote.type || \"boolean\",\n                role: remote.role || \"boolean\",\n                def: remote.def || false,\n                write: true,\n                read: true,\n              },\n              native: {},\n            });\n          });\n          this.json2iob.parse(id, device);\n          if (device.status === 1) {\n            const body = `{\"requestData\":{\"method\":\"get_device_info\",\"terminalUUID\":\"01D6B18A-5514-4C9F-B49C-555E775591B2\"},\"deviceId\":\"${id}\"}`;\n            const md5 = crypto.createHash(\"md5\").update(body).digest(\"base64\");\n            this.log.debug(md5);\n            const content = md5 + \"\\n9999999999\\nfee66616-58dd-4bcb-be79-fe092d800a21\\n/api/v2/common/passthrough\";\n            const signature = crypto.createHmac(\"sha1\", this.secret).update(content).digest(\"hex\");\n            await this.requestClient({\n              method: \"post\",\n              url: `https://n-euw1-wap-gw.tplinkcloud.com/api/v2/common/passthrough?token=${this.session.token}&termID=CDE6601E-148C-4CB7-831F-FD587E954C69&appVer=2.8.21&locale=de_DE&appName=TP-Link_Tapo_iOS&netType=wifi&model=iPhone10%2C5&termName=iPhone&termMeta=3&brand=TPLINK&ospf=iOS%2014.8`,\n              headers: {\n                \"Content-Type\": \"application/json;UTF-8\",\n                \"Content-MD5\": md5,\n                Accept: \"*/*\",\n                \"User-Agent\": \"Tapo/2.8.21 (iPhone; iOS 14.8; Scale/3.00)\",\n                \"Accept-Language\": \"de-DE;q=1, uk-DE;q=0.9, en-DE;q=0.8\",\n                \"X-Authorization\":\n                  \"Timestamp=9999999999, Nonce=fee66616-58dd-4bcb-be79-fe092d800a21, AccessKey=4d11b6b9d5ea4d19a829adbb9714b057, Signature=\" +\n                  signature,\n              },\n              data: body,\n            })\n              .then(async (res) => {\n                this.log.debug(JSON.stringify(res.data));\n\n                if (res.data.error_code) {\n                  this.log.error(JSON.stringify(res.data));\n                  return;\n                }\n                const result = res.data.result?.responseData?.result;\n                this.devices[id] = { ...this.devices[id], ...result };\n                if (result.ip) {\n                  await this.initDevice(id);\n                }\n                this.json2iob.parse(id, result);\n              })\n              .catch((error) => {\n                this.log.error(error);\n                error.response && this.log.error(JSON.stringify(error.response.data));\n              });\n          }\n        }\n      })\n      .catch((error) => {\n        this.log.error(error);\n        error.response && this.log.error(JSON.stringify(error.response.data));\n      });\n  }\n  async initDevice(id: string): Promise<void> {\n    const device = this.devices[id];\n    this.log.info(`Init device ${id} type ${device.deviceName} with ip ${device.ip}`);\n    let deviceObject: any;\n    if (device.deviceName === \"P100\") {\n      deviceObject = new P100(this.log, device.ip, this.config.username, this.config.password, 2);\n    } else if (device.deviceName === \"P110\") {\n      deviceObject = new P110(this.log, device.ip, this.config.username, this.config.password, 2);\n    } else if (device.deviceName === \"L530\") {\n      deviceObject = new L530(this.log, device.ip, this.config.username, this.config.password, 2);\n    } else if (device.deviceName === \"L510E\") {\n      deviceObject = new L510E(this.log, device.ip, this.config.username, this.config.password, 2);\n    } else {\n      this.log.info(`Unknown device type ${device.deviceName} init as P100`);\n      deviceObject = new P100(this.log, device.ip, this.config.username, this.config.password, 2);\n    }\n    this.deviceObjects[id] = deviceObject;\n    await deviceObject\n      .handshake()\n      .then(() => {\n        deviceObject\n          .login()\n          .then(() => {\n            deviceObject\n              .getDeviceInfo()\n              .then((sysInfo: any) => {\n                this.log.debug(JSON.stringify(sysInfo));\n                this.json2iob.parse(id, sysInfo);\n                const interval = this.config.interval ? this.config.interval * 1000 : 30000;\n                this.log.debug(\"interval: \" + interval);\n\n                setTimeout(() => {\n                  // this.updateState(interval);\n                }, interval);\n              })\n              .catch(() => {\n                this.log.error(\"52 - Get Device Info failed\");\n              });\n          })\n          .catch(() => {\n            this.log.error(\"Login failed\");\n          });\n      })\n      .catch(() => {\n        this.log.error(\"Handshake failed\");\n      });\n  }\n\n  async updateDevices(): Promise<void> {\n    try {\n      for (const deviceId in this.deviceObjects) {\n        this.deviceObjects[deviceId]\n          .getDeviceInfo()\n          .then((sysInfo: any) => {\n            this.log.debug(JSON.stringify(sysInfo));\n            this.json2iob.parse(deviceId, sysInfo);\n          })\n          .catch((error) => {\n            this.log.error(`Get Device Info failed for ${deviceId} - ${error}`);\n          });\n      }\n    } catch (error) {\n      this.log.error(error);\n    }\n  }\n\n  async sleep(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n  async refreshToken(): Promise<void> {\n    this.log.debug(\"Refresh token\");\n  }\n  /**\n   * Is called when adapter shuts down - callback has to be called under any circumstances!\n   */\n  private onUnload(callback: () => void): void {\n    try {\n      this.setState(\"info.connection\", false, true);\n      this.refreshTimeout && clearTimeout(this.refreshTimeout);\n      this.reLoginTimeout && clearTimeout(this.reLoginTimeout);\n      this.refreshTokenTimeout && clearTimeout(this.refreshTokenTimeout);\n      this.updateInterval && clearInterval(this.updateInterval);\n      this.refreshTokenInterval && clearInterval(this.refreshTokenInterval);\n\n      callback();\n    } catch (e) {\n      callback();\n    }\n  }\n\n  /**\n   * Is called if a subscribed state changes\n   */\n  private onStateChange(id: string, state: ioBroker.State | null | undefined): void {\n    if (state) {\n      if (!state.ack) {\n        const deviceId = id.split(\".\")[2];\n        const command = id.split(\".\")[4];\n        if (id.split(\".\")[3] !== \"remote\") {\n          return;\n        }\n\n        if (command === \"Refresh\") {\n          this.deviceObjects[deviceId]\n            .getDeviceInfo()\n            .then((sysInfo: any) => {\n              this.log.debug(JSON.stringify(sysInfo));\n              this.json2iob.parse(deviceId, sysInfo);\n            })\n            .catch((error) => {\n              this.log.error(`Get Device Info failed for ${deviceId} - ${error}`);\n            });\n\n          return;\n        }\n        try {\n          if (this.deviceObjects[deviceId][command]) {\n            if (command === \"setColor\") {\n              const valueSplit = state.val.split(\", \");\n              this.log.info(this.deviceObjects[deviceId][command](valueSplit[0], valueSplit[1]));\n            } else {\n              this.log.info(this.deviceObjects[deviceId][command](state.val));\n            }\n          } else {\n            this.log.error(`Device ${deviceId} has no command ${command}`);\n          }\n        } catch (error) {\n          this.log.error(error);\n        }\n      }\n    }\n  }\n}\n\nif (require.main !== module) {\n  // Export the constructor in compact mode\n  module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new Tapo(options);\n} else {\n  // otherwise start the instance directly\n  (() => new Tapo())();\n}\n"],
  "mappings": "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",
  "names": ["Json2iob", "axios", "https", "crypto", "body", "path", "md5", "content", "signature", "res", "_a", "_b", "P100", "P110", "L530", "L510E"]
}
