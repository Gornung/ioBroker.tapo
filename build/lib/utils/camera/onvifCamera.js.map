{
  "version": 3,
  "sources": ["../../../../src/lib/utils/camera/onvifCamera.ts"],
  "sourcesContent": ["import { Cam, NotificationMessage } from \"onvif\";\nimport { EventEmitter } from \"stream\";\ntype CameraConfig = {\n  name: string;\n  ipAddress: string;\n  password: string;\n  streamUser: string;\n  streamPassword: string;\n\n  pullInterval?: number;\n  disableStreaming?: boolean;\n  disablePrivacyAccessory?: boolean;\n  disableAlarmAccessory?: boolean;\n  disableMotionAccessory?: boolean;\n  lowQuality?: boolean;\n};\nexport class OnvifCamera {\n  private events: EventEmitter | undefined;\n  private device: Cam | undefined;\n\n  private readonly kOnvifPort = 2020;\n\n  constructor(protected readonly log: any, protected readonly config: CameraConfig) {}\n\n  private async getDevice(): Promise<Cam> {\n\n    return new Promise((resolve, reject) => {\n      if (this.device) {\n        return resolve(this.device);\n      }\n      this.log.debug(\"Connecting to ONVIF device\" + JSON.stringify(this.config) + \" on port \" + this.kOnvifPort);\n      const device: Cam = new Cam(\n        {\n          hostname: this.config.ipAddress,\n          username: this.config.streamUser,\n          password: this.config.streamPassword,\n          port: this.kOnvifPort,\n        },\n        (err) => {\n          if (err) {\n            return reject(err);\n          }\n          this.device = device;\n          return resolve(this.device);\n        },\n      );\n    });\n  }\n\n  async getEventEmitter() {\n    if (this.events) {\n      return this.events;\n    }\n\n    const onvifDevice = await this.getDevice();\n\n    let lastMotionValue = false;\n\n    this.events = new EventEmitter();\n    this.log.debug(`[${this.config.name}]`, \"Starting ONVIF listener\");\n\n    onvifDevice.on(\"event\", (event: NotificationMessage) => {\n      this.log.debug(`Received event: ${JSON.stringify(event)}`);\n      if (event?.topic?._?.match(/RuleEngine\\/CellMotionDetector\\/Motion$/)) {\n        const motion = event.message.message.data.simpleItem.$.Value;\n        if (motion !== lastMotionValue) {\n          lastMotionValue = motion;\n          this.events = this.events || new EventEmitter();\n          this.events.emit(\"motion\", motion);\n        }\n      }\n    });\n\n    return this.events;\n  }\n\n  async getVideoSource(): Promise<VideoSource> {\n    const onvifDevice = await this.getDevice();\n    return onvifDevice.videoSources[0];\n  }\n\n  async getDeviceInfo(): Promise<DeviceInformation> {\n    const onvifDevice = await this.getDevice();\n    return new Promise((resolve, reject) => {\n      this.log.debug(\"Getting device information for \" + JSON.stringify(onvifDevice));\n      onvifDevice.getDeviceInformation((err, deviceInformation) => {\n        if (err) return reject(err);\n        resolve(deviceInformation);\n      });\n    });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyC;AACzC,oBAA6B;AAetB,MAAM,YAAY;AAAA,EAMvB,YAA+B,KAA6B,QAAsB;AAAnD;AAA6B;AAF5D,SAAiB,aAAa;AAAA,EAEqD;AAAA,EAEnF,MAAc,YAA0B;AAEtC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAI,KAAK,QAAQ;AACf,eAAO,QAAQ,KAAK,MAAM;AAAA,MAC5B;AACA,WAAK,IAAI,MAAM,+BAA+B,KAAK,UAAU,KAAK,MAAM,IAAI,cAAc,KAAK,UAAU;AACzG,YAAM,SAAc,IAAI;AAAA,QACtB;AAAA,UACE,UAAU,KAAK,OAAO;AAAA,UACtB,UAAU,KAAK,OAAO;AAAA,UACtB,UAAU,KAAK,OAAO;AAAA,UACtB,MAAM,KAAK;AAAA,QACb;AAAA,QACA,CAAC,QAAQ;AACP,cAAI,KAAK;AACP,mBAAO,OAAO,GAAG;AAAA,UACnB;AACA,eAAK,SAAS;AACd,iBAAO,QAAQ,KAAK,MAAM;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EAEA,MAAM,kBAAkB;AACtB,QAAI,KAAK,QAAQ;AACf,aAAO,KAAK;AAAA,IACd;AAEA,UAAM,cAAc,MAAM,KAAK,UAAU;AAEzC,QAAI,kBAAkB;AAEtB,SAAK,SAAS,IAAI,2BAAa;AAC/B,SAAK,IAAI,MAAM,IAAI,KAAK,OAAO,SAAS,yBAAyB;AAEjE,gBAAY,GAAG,SAAS,CAAC,UAA+B;AA7D5D;AA8DM,WAAK,IAAI,MAAM,mBAAmB,KAAK,UAAU,KAAK,GAAG;AACzD,WAAI,0CAAO,UAAP,mBAAc,MAAd,mBAAiB,MAAM,4CAA4C;AACrE,cAAM,SAAS,MAAM,QAAQ,QAAQ,KAAK,WAAW,EAAE;AACvD,YAAI,WAAW,iBAAiB;AAC9B,4BAAkB;AAClB,eAAK,SAAS,KAAK,UAAU,IAAI,2BAAa;AAC9C,eAAK,OAAO,KAAK,UAAU,MAAM;AAAA,QACnC;AAAA,MACF;AAAA,IACF,CAAC;AAED,WAAO,KAAK;AAAA,EACd;AAAA,EAEA,MAAM,iBAAuC;AAC3C,UAAM,cAAc,MAAM,KAAK,UAAU;AACzC,WAAO,YAAY,aAAa;AAAA,EAClC;AAAA,EAEA,MAAM,gBAA4C;AAChD,UAAM,cAAc,MAAM,KAAK,UAAU;AACzC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,WAAK,IAAI,MAAM,oCAAoC,KAAK,UAAU,WAAW,CAAC;AAC9E,kBAAY,qBAAqB,CAAC,KAAK,sBAAsB;AAC3D,YAAI;AAAK,iBAAO,OAAO,GAAG;AAC1B,gBAAQ,iBAAiB;AAAA,MAC3B,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AACF;",
  "names": []
}
