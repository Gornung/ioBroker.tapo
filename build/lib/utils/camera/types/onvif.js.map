{
  "version": 3,
  "sources": ["../../../../../src/lib/utils/camera/types/onvif.ts"],
  "sourcesContent": ["import { EventEmitter } from \"events\";\n\nexport type VideoSource = {\n  framerate: number;\n  resolution: {\n    width: number;\n    height: number;\n  };\n};\n\nexport interface Bounds {\n  $: {\n    height: number;\n    width: number;\n    y: number;\n    x: number;\n  };\n}\n\nexport interface VideoSourceConfiguration {\n  $: {\n    token: string;\n  };\n  name: string;\n  useCount: number;\n  sourceToken: string;\n  bounds: Bounds;\n}\n\nexport interface AudioSourceConfiguration {\n  $: {\n    token: string;\n  };\n  name: string;\n  useCount: number;\n  sourceToken: string;\n}\nexport interface Resolution {\n  width: number;\n  height: number;\n}\n\nexport interface RateControl {\n  frameRateLimit: number;\n  encodingInterval: number;\n  bitrateLimit: number;\n}\n\nexport interface H264 {\n  govLength: number;\n  H264Profile: string;\n}\n\nexport interface Address {\n  type: string;\n  IPv4Address: string;\n}\n\nexport interface Multicast {\n  address: Address;\n  port: number;\n  TTL: number;\n  autoStart: boolean;\n}\n\nexport interface VideoEncoderConfiguration {\n  $: {\n    token: string;\n  };\n  name: string;\n  useCount: number;\n  encoding: string;\n  resolution: Resolution;\n  quality: number;\n  rateControl: RateControl;\n  H264: H264;\n  multicast: Multicast;\n  sessionTimeout: string;\n}\n\nexport interface Address2 {\n  type: string;\n  IPv4Address: string;\n}\n\nexport interface Multicast2 {\n  address: Address2;\n  port: number;\n  TTL: number;\n  autoStart: boolean;\n}\n\nexport interface AudioEncoderConfiguration {\n  $: {\n    token: string;\n  };\n  name: string;\n  useCount: number;\n  encoding: string;\n  bitrate: number;\n  sampleRate: number;\n  multicast: Multicast2;\n  sessionTimeout: string;\n}\n\nexport interface SimpleItem {\n  $: {\n    Value: string | boolean;\n    Name: string;\n  };\n}\n\nexport interface Translate {\n  $: {\n    y: number;\n    x: number;\n  };\n}\n\nexport interface Scale {\n  $: {\n    y: number;\n    x: number;\n  };\n}\n\nexport interface Transformation {\n  translate: Translate;\n  scale: Scale;\n}\n\nexport interface CellLayout {\n  $: {\n    Rows: number;\n    Columns: number;\n  };\n  transformation: Transformation;\n}\n\nexport interface ElementItem {\n  $: {\n    Name: string;\n  };\n  cellLayout: CellLayout;\n}\n\nexport interface Parameters {\n  simpleItem: SimpleItem[];\n  elementItem: ElementItem;\n}\n\nexport interface AnalyticsModule {\n  parameters: Parameters;\n}\n\nexport interface AnalyticsEngineConfiguration {\n  analyticsModule: AnalyticsModule[];\n}\n\nexport interface Rule {\n  $: {\n    Name: string;\n    Type: string;\n  };\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  parameters: any;\n}\n\nexport interface RuleEngineConfiguration {\n  rule: Rule[];\n}\n\nexport interface VideoAnalyticsConfiguration {\n  $: {\n    token: string;\n  };\n  name: string;\n  useCount: number;\n  analyticsEngineConfiguration: AnalyticsEngineConfiguration;\n  ruleEngineConfiguration: RuleEngineConfiguration;\n}\n\nexport interface PanTilt {\n  $: {\n    space: string;\n    y: number;\n    x: number;\n  };\n}\n\nexport interface DefaultPTZSpeed {\n  panTilt: PanTilt;\n}\n\nexport interface XRange {\n  min: number;\n  max: number;\n}\n\nexport interface YRange {\n  min: number;\n  max: number;\n}\n\nexport interface Range {\n  URI: string;\n  XRange: XRange;\n  YRange: YRange;\n}\n\nexport interface PanTiltLimits {\n  range: Range;\n}\n\nexport interface PTZConfiguration {\n  $: {\n    token: string;\n  };\n  name: string;\n  useCount: number;\n  nodeToken: string;\n  defaultAbsolutePantTiltPositionSpace: string;\n  defaultRelativePanTiltTranslationSpace: string;\n  defaultContinuousPanTiltVelocitySpace: string;\n  defaultPTZSpeed: DefaultPTZSpeed;\n  defaultPTZTimeout: string;\n  panTiltLimits: PanTiltLimits;\n}\n\nexport interface Profile {\n  $: {\n    fixed: boolean;\n    token: string;\n  };\n  name: string;\n  videoSourceConfiguration: VideoSourceConfiguration;\n  audioSourceConfiguration: AudioSourceConfiguration;\n  videoEncoderConfiguration: VideoEncoderConfiguration;\n  audioEncoderConfiguration: AudioEncoderConfiguration;\n  videoAnalyticsConfiguration: VideoAnalyticsConfiguration;\n  PTZConfiguration: PTZConfiguration;\n}\n\nexport type DeviceInformation = {\n  manufacturer: string;\n  model: string;\n  firmwareVersion: string;\n  serialNumber: string;\n  hardwareId: string;\n};\n\nexport type ConnectionCallback = (error?: Error) => void;\n\nexport interface NotificationMessage {\n  topic: { _: string };\n  message: {\n    message: {\n      $: object;\n      source: object;\n      data: {\n        simpleItem: SimpleItem;\n      };\n    };\n  };\n}\n\nexport interface CamOptions {\n  hostname: string;\n  username?: string;\n  password?: string;\n  port?: number;\n  path?: string;\n  timeout?: number;\n  preserveAddress?: boolean;\n}\n\nexport interface Cam extends EventEmitter {\n  connect(callback: ConnectionCallback): void;\n  on(event: \"event\", listener: (message: NotificationMessage) => void): this;\n  getDeviceInformation(callback: (error: Error, deviceInformation: DeviceInformation) => void): void;\n  getProfiles(callback: (error: Error, profiles: Profile[]) => void): void;\n\n  videoSources: VideoSource[];\n}\n"],
  "mappings": ";;;;;;;;;;;;;;AAAA;AAAA;",
  "names": []
}
