{
  "version": 3,
  "sources": ["../../../src/lib/utils/p110.ts"],
  "sourcesContent": ["import { EnergyUsage } from \"./energyUsage\";\nimport P100 from \"./p100\";\nimport { ConsumptionInfo } from \"./types\";\n\nexport default class P110 extends P100 {\n  private _consumption!: ConsumptionInfo;\n\n  constructor(\n    public readonly log: any,\n    public readonly ipAddress: string,\n    public readonly email: string,\n    public readonly password: string,\n    public readonly timeout: number,\n  ) {\n    super(log, ipAddress, email, password, timeout);\n    this.log.debug(\"Constructing P110 on host: \" + ipAddress);\n  }\n\n  async getEnergyUsage(): Promise<EnergyUsage> {\n    const payload = \"{\" + '\"method\": \"get_energy_usage\",' + '\"requestTimeMils\": ' + Math.round(Date.now() * 1000) + \"\" + \"};\";\n\n    return this.handleRequest(payload).then((response) => {\n      this.log.debug(\"getEnergyUsage response: \" + JSON.stringify(response));\n      if (response && response.result) {\n        this._consumption = {\n          current: response.result.current_power / 1000,\n          total: response.result.today_energy / 1000,\n        };\n      } else {\n        this._consumption = {\n          current: 0,\n          total: 0,\n        };\n      }\n\n      return response.result;\n    });\n  }\n\n  public getPowerConsumption(): ConsumptionInfo {\n    return this._consumption;\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAiB;AAGjB,MAAO,aAA2B,YAAAA,QAAK;AAAA,EAGrC,YACkB,KACA,WACA,OACA,UACA,SAChB;AACA,UAAM,KAAK,WAAW,OAAO,UAAU,OAAO;AAN9B;AACA;AACA;AACA;AACA;AAGhB,SAAK,IAAI,MAAM,gCAAgC,SAAS;AAAA,EAC1D;AAAA,EAEA,MAAM,iBAAuC;AAC3C,UAAM,UAAU,sDAAgE,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI,IAAS;AAErH,WAAO,KAAK,cAAc,OAAO,EAAE,KAAK,CAAC,aAAa;AACpD,WAAK,IAAI,MAAM,8BAA8B,KAAK,UAAU,QAAQ,CAAC;AACrE,UAAI,YAAY,SAAS,QAAQ;AAC/B,aAAK,eAAe;AAAA,UAClB,SAAS,SAAS,OAAO,gBAAgB;AAAA,UACzC,OAAO,SAAS,OAAO,eAAe;AAAA,QACxC;AAAA,MACF,OAAO;AACL,aAAK,eAAe;AAAA,UAClB,SAAS;AAAA,UACT,OAAO;AAAA,QACT;AAAA,MACF;AAEA,aAAO,SAAS;AAAA,IAClB,CAAC;AAAA,EACH;AAAA,EAEO,sBAAuC;AAC5C,WAAO,KAAK;AAAA,EACd;AACF;",
  "names": ["P100"]
}
